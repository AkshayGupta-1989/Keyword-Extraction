ID: 0
Methods: 
mltk:predictor:tree:RTreeLearner-getHistogram-(mltk:core:Instances+java:util:List+java:util:List+D+D+java:util:List)
mltk:predictor:tree:RegressionTreeLearner-buildMinLeafSizeLimitedTree-(mltk:core:Instances+I)
mltk:predictor:tree:ensemble:rf:RandomForestLearner-build-(mltk:core:Instances)
mltk:predictor:tree:TreeLearner$Dataset-split-(I+D+mltk:predictor:tree:TreeLearner$Dataset+mltk:predictor:tree:TreeLearner$Dataset)
mltk:predictor:function:LineCutter-build-(mltk:core:Instances+mltk:core:Attribute+D)
mltk:predictor:tree:RegressionTreeLearner-buildAlphaLimitedTree-(mltk:core:Instances+D)
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner-runLayeredTraining-(mltk:core:Instances+mltk:core:Instances+I+I+I+I+I+I+java:util:List+mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner$PerformanceMatrix+mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner$ModelMatrix+mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner$PredictionMatrix+[D+[D)
mltk:predictor:function:Function2D-regress-(mltk:core:Instance)
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner-buildRegressor-(mltk:core:Instances+mltk:core:Instances)
mltk:util:tuple:IntDoublePair-equals-(java:lang:Object)
mltk:util:tuple:IntDoublePairComparator-compare-(mltk:util:tuple:IntDoublePair+mltk:util:tuple:IntDoublePair)
mltk:predictor:function:LineCutter-build-(mltk:core:Instances)
mltk:predictor:function:LineCutter-build-(mltk:core:Instances+I+D)
mltk:predictor:tree:RegressionTreeLearner-build-(mltk:core:Instances)
mltk:predictor:Learner$Task-getDefaultMetric-()
mltk:predictor:tree:TreeLearner$Dataset-create-(mltk:core:Instances)
mltk:feature:selection:BackwardElimination-select-(mltk:core:Instances+mltk:core:Instances+mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner+I+I+D+I)
mltk:predictor:function:LineCutter-build-(mltk:core:Instances+mltk:core:Attribute+I)
mltk:core:processor:Discretizer-getStats-(java:util:List+java:util:List)
mltk:core:SparseVector-copy-()
mltk:predictor:function:LineCutter-build-(mltk:predictor:function:Function1D+java:util:List+java:util:List+I)
mltk:util:ArrayUtils-parseDoubleArray-(java:lang:String+java:lang:String)
mltk:predictor:tree:RegressionTreeLearner-createNode-(mltk:predictor:tree:TreeLearner$Dataset+I+[D)
mltk:util:tuple:DoublePair-equals-(java:lang:Object)
mltk:predictor:Learner-isSparse-(mltk:core:Instances)
mltk:predictor:evaluation:MetricFactory-getMetric-(java:lang:String)
mltk:predictor:function:LineCutter-inorder-(mltk:predictor:function:LineCutter$Interval+java:util:List+java:util:List)
mltk:predictor:tree:ensemble:rf:RandomRegressionTreeLearner-createNode-(mltk:predictor:tree:TreeLearner$Dataset+I+[D)
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner-build-(mltk:core:Instances)
mltk:predictor:tree:RegressionTreeLearner-buildDepthLimitedTree-(mltk:core:Instances+I)
mltk:core:Sampling-createBootstrapSample-(mltk:core:Instances+java:util:Map+java:util:List)
mltk:predictor:function:LineCutter-build-(mltk:predictor:function:Function1D+java:util:List+java:util:List+D)
mltk:predictor:tree:RegressionTreeLearner-buildNumLeafLimitedTree-(mltk:core:Instances+I)
mltk:predictor:glm:LassoLearner-doOnePassGaussian-([[I+[[D+[D+D+[D+[D)
mltk:util:MathUtils-sign-(D)
mltk:predictor:function:LineCutter$Interval-isInteriorNode-()
mltk:predictor:function:LineCutter-sumUp-(java:util:List+I+I)
mltk:core:Instances-copy-()
mltk:core:Sampling-createBags-(mltk:core:Instances+I)
mltk:util:VectorUtils-subtract-([D+D)
mltk:core:processor:Discretizer-main-([java:lang:String)
mltk:feature:selection:BackwardElimination-evaluateModel-(mltk:core:Instances+mltk:core:Instances+mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner+I+I+D+I)
mltk:util:tuple:LongDoublePairComparator-compare-(mltk:util:tuple:LongDoublePair+mltk:util:tuple:LongDoublePair)
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner-main-([java:lang:String)
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner-backfit-(mltk:core:Instances+D+[mltk:predictor:tree:RegressionTree+[[D+[D)
mltk:predictor:tree:RegressionTreeLearner-main-([java:lang:String)
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner$ModelMatrix-add-(I+I+[mltk:predictor:tree:RegressionTree)
mltk:util:tuple:LongDoublePair-equals-(java:lang:Object)
mltk:core:processor:Discretizer-computeBins-([D+I)
mltk:predictor:tree:ensemble:RTreeList-copy-()
mltk:predictor:tree:ensemble:rf:RandomForestLearner-main-([java:lang:String)

ID: 1
Methods: 
mltk:predictor:glm:ElasticNetLearner-findMaxLambdaGaussian-([[D+[D+D)
mltk:predictor:tree:RegressionTree-multiply-(mltk:predictor:tree:TreeNode+D)
mltk:predictor:glm:RidgeLearner-buildGaussianRegressors-(mltk:core:Instances+Z+I+[D)
mltk:predictor:function:SquareCutter-getPredictor-(mltk:predictor:function:SquareCutter$Table+I+I+[D)
mltk:predictor:gam:SPLAMLearner-doOnePass-([[[D+[D+[D+[D+Z+[Z+[[D+[D+[D+[D+[D+[D+[D+[D)
mltk:predictor:function:Function2D-copy-()
mltk:core:processor:OneHotEncoder-process-(mltk:core:Instances)
mltk:predictor:glm:RidgeLearner-buildGaussianRegressors-([I+[[I+[[D+[D+I+[D)
mltk:predictor:gam:SPLAMLearner-build-(mltk:core:Instances)
mltk:predictor:gam:SPLAMLearner-buildBinaryClassifier-([I+[[I+[[[D+[D+[[D+I+D+D)
mltk:predictor:tree:ensemble:brt:LADBoostLearner-buildRegressor-(mltk:core:Instances+mltk:core:Instances+I+mltk:predictor:evaluation:Metric)
mltk:predictor:glm:RidgeLearner-buildClassifier-(mltk:core:Instances+I+D)
mltk:predictor:glm:LassoLearner-refitGaussianRegressor-([I+[Z+[[I+[[D+[D+I)
mltk:predictor:tree:ensemble:brt:LSBoostLearner-buildRegressor-(mltk:core:Instances+I)
mltk:predictor:glm:GroupLassoLearner-doOnePassBinomial-([[[D+[D+[D+Z+[Z+[[D+[D+[D+[D+[D+[D)
mltk:predictor:function:Function1D-divide-(D)
mltk:core:processor:InstancesSplitter-split-(mltk:core:Instances+D)
mltk:predictor:gam:SPLAMLearner-buildRegressor-(mltk:core:Instances+I+I+D+D)
mltk:predictor:glm:GroupLassoLearner-buildGaussianRegressors-(mltk:core:Instances+Z+java:util:List+I+I+D)
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner$ModelMatrix-expand-(I+I+I)
mltk:predictor:function:Function1D-copy-()
mltk:predictor:function:CubicSpline-h-(D+D)
mltk:predictor:tree:ensemble:brt:LogitBoostLearner-buildClassifier-(mltk:core:Instances+I)
mltk:predictor:gam:SPLAMLearner-main-([java:lang:String)
mltk:predictor:tree:ensemble:brt:LogitBoostLearner-build-(mltk:core:Instances)
mltk:predictor:glm:LassoLearner-buildGaussianRegressors-(mltk:core:Instances+I+I+D)
mltk:predictor:tree:RegressionTreeLearner-split-(mltk:predictor:tree:TreeLearner$Dataset+mltk:predictor:tree:TreeInteriorNode+mltk:predictor:tree:TreeLearner$Dataset+mltk:predictor:tree:TreeLearner$Dataset)
mltk:util:StatUtils-mean-([D+I)
mltk:predictor:gam:SPLAMLearner-refitRegressor-([I+[B+[[I+[[[D+[D+[[D+[[D+I)
mltk:predictor:glm:LassoLearner-buildGaussianRegressor-([I+[[D+[D+I+D)
mltk:predictor:gam:tool:Diagnostics-diagnose-(mltk:predictor:gam:GAM+mltk:core:Instances)
mltk:predictor:gam:SPLAMLearner$ModelStructure-hashCode-()
mltk:predictor:tree:ensemble:brt:LADBoostLearner-build-(mltk:core:Instances)
mltk:predictor:glm:ElasticNetLearner-buildGaussianRegressors-(mltk:core:Instances+I+I+D+D)
mltk:util:VectorUtils-dotProduct-(mltk:core:SparseVector+mltk:core:SparseVector)
mltk:predictor:evaluation:Error-eval-([D+[D)
mltk:predictor:gam:SPLAMLearner-buildRegressor-([I+[[I+[[[D+[D+[[D+I+D+D)
mltk:predictor:glm:ElasticNetLearner-buildGaussianRegressors-([I+[[I+[[D+[D+I+I+D+D)
mltk:predictor:glm:RidgeLearner-buildGaussianRegressors-([I+[[D+[D+I+[D)
mltk:predictor:gam:SparseDesignMatrix-createCubicSplineDesignMatrix-(I+[[I+[[D+[D+I)
mltk:predictor:tree:ensemble:brt:LogitBoostLearner-buildBinaryClassifier-(mltk:core:Instances+mltk:core:Instances+I+mltk:predictor:evaluation:Metric)
mltk:predictor:glm:GroupLassoLearner-buildBinaryClassifiers-([[I+[[[D+[D+I+I+D)
mltk:predictor:glm:LassoLearner-buildGaussianRegressors-([I+[[D+[D+I+I+D)
mltk:cmdline:CmdLineParser-processFields-([java:lang:reflect:Field)
mltk:predictor:glm:GroupLassoLearner-buildGaussianRegressors-([[I+[[[D+[D+I+I+D)
mltk:core:Instance-setValue-([I+[D)
mltk:predictor:gam:SPLAMLearner-buildRegressor-(mltk:core:Instances+Z+I+I+D+D)
mltk:predictor:glm:GroupLassoLearner-refitGaussianRegressor-(I+[[I+[Z+[[[I+[[[D+[D+[[D+I)
mltk:predictor:glm:RidgeLearner-buildGaussianRegressor-([I+[[D+[D+I+D)
mltk:util:StatUtils-max-([D)
mltk:core:DenseVector-copy-()
mltk:predictor:glm:GroupLassoLearner-buildGaussianRegressor-([[I+[[[I+[[[D+[D+I+D)

ID: 2
Methods: 
mltk:predictor:tree:ensemble:rf:RandomRegressionTreeLearner-build-(mltk:core:Instances)
mltk:core:SparseVector-getValue-(I)
mltk:predictor:gam:GAMUtils-getGAM-(mltk:predictor:glm:GLM+java:util:List)
mltk:util:StatUtils-sum-([D)
mltk:predictor:gam:GA2MLearner-build-(mltk:core:Instances)
mltk:predictor:tree:ensemble:brt:BRT-classify-(mltk:core:Instance)
mltk:predictor:tree:ensemble:brt:BRT-regress-(mltk:core:Instance)
mltk:predictor:glm:LassoLearner-findMaxLambdaGaussian-([[I+[[D+[D)
mltk:predictor:function:CompressionUtils-compress-(I+I+mltk:predictor:BoostedEnsemble)
mltk:predictor:function:Function1D-add-(mltk:predictor:function:Function1D)
mltk:predictor:function:Function1D-regress-(mltk:core:Instance)
mltk:predictor:glm:GLM-classify-(mltk:core:Instance)
mltk:predictor:gam:GA2MLearner-buildClassifier-(mltk:predictor:gam:GAM+java:util:List+mltk:core:Instances+mltk:core:Instances+I)
mltk:predictor:tree:ensemble:ag:AdditiveGroves-copy-()
mltk:predictor:function:Function2D-add-(mltk:predictor:function:Function2D)
mltk:predictor:gam:GA2MLearner-buildRegressor-(mltk:predictor:gam:GAM+java:util:List+mltk:core:Instances+I)
mltk:predictor:function:CompressionUtils-compress-(I+I+mltk:predictor:BaggedEnsemble)
mltk:util:Queue-isEmpty-()
mltk:util:ArrayUtils-getMedian-([D)
mltk:predictor:gam:GAMLearner-build-(mltk:core:Instances)
mltk:util:Permutation-permute-()
mltk:predictor:gam:GA2MLearner-main-([java:lang:String)
mltk:predictor:glm:GLM-predictProbabilities-(mltk:core:Instance)
mltk:predictor:function:Function1D-evaluate-(D)
mltk:predictor:glm:GLMOptimUtils-getGLM-([I+[D+D+mltk:predictor:LinkFunction)
mltk:util:ArrayUtils-toIntArray-([D)
mltk:predictor:gam:GAMLearner-main-([java:lang:String)
mltk:util:ArrayUtils-isConstant-([I+I+I+I)
mltk:core:DenseVector-getValues-([I)
mltk:predictor:tree:ensemble:brt:BRT-copy-()
mltk:predictor:function:Function2D-getConstantFunction-(I+I+D)
mltk:predictor:function:Array2D-add-(mltk:predictor:function:Array2D)
mltk:predictor:glm:GroupLassoLearner-getGLM-(I+[[I+[Z+[D+D+mltk:predictor:LinkFunction)
mltk:predictor:function:Function2D-divide-(D)
mltk:predictor:function:Histogram2D-computeCHistogram-()
mltk:predictor:gam:GAMLearner-buildClassifier-(mltk:core:Instances+mltk:core:Instances+I+I)
mltk:predictor:function:CompressionUtils-compress-(I+mltk:predictor:BaggedEnsemble)
mltk:predictor:function:CompressionUtils-convert-(I+I+mltk:predictor:function:Function2D)
mltk:predictor:function:CubicSpline-copy-()
mltk:predictor:tree:TreeLearner$Dataset-merge-(mltk:predictor:tree:TreeLearner$Dataset+mltk:predictor:tree:TreeLearner$Dataset)
mltk:util:StatUtils-indexOfMin-([I)
mltk:core:DenseVector-setValue-([I+[D)
mltk:core:processor:InstancesSplitter-createCrossValidationFolds-(mltk:core:Instances+I)
mltk:predictor:gam:SPLAMLearner-doOnePass-([[I+[[[D+[D+[D+Z+[Z+[[D+[D+[D+[D+[D+[D+[D)
mltk:predictor:gam:GAMLearner-buildRegressor-(mltk:core:Instances+I+I)
mltk:predictor:tree:ensemble:brt:LogitBoostLearner-setTreeLearner-(mltk:predictor:tree:TreeLearner)

ID: 3
Methods: 
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner$PerformanceMatrix-analyzeBagging-(I+I)
mltk:core:Bins-getIndex-(D)
mltk:core:Instances-getAttributes-([I)
mltk:predictor:BaggedEnsemble-classify-(mltk:core:Instance)
mltk:predictor:function:LineCutter-getStats-(java:util:List+java:util:List+java:util:List)
mltk:predictor:tree:ensemble:ag:AdditiveGroves-regress-(mltk:core:Instance)
mltk:predictor:gam:SPLAMLearner-getGAM-([I+[[D+[[D+D)
mltk:predictor:Learner-getSparseDataset-(mltk:core:Instances+Z)
mltk:predictor:tree:ensemble:brt:RobustRegressionTreeLearner-getStats-(mltk:core:Instances+[D)
mltk:predictor:BaggedEnsemble-regress-(mltk:core:Instance)
mltk:predictor:tree:RegressionTree-regress-(mltk:core:Instance)
mltk:predictor:evaluation:AUC$DoublePairComparator-compare-(mltk:util:tuple:DoublePair+mltk:util:tuple:DoublePair)
mltk:predictor:gam:GAM-classify-(mltk:core:Instance)
mltk:predictor:evaluation:Predictor-predict-(mltk:predictor:Regressor+mltk:core:Instances+java:lang:String+Z)
mltk:predictor:function:SquareCutter-getPredictor-(mltk:predictor:function:SquareCutter$Table+[I+I+[D)
mltk:core:SparseVector-getValues-([I)
mltk:predictor:gam:SPLAMLearner-extractStructure-([[D)
mltk:predictor:gam:interaction:FAST-main-([java:lang:String)
mltk:predictor:tree:ensemble:brt:RobustRegressionTreeLearner-getHistogram-(mltk:core:Instances+java:util:List+java:util:List+D+D+java:util:List)
mltk:util:OptimUtils-isConverged-([D+Z)
mltk:predictor:glm:GroupLassoLearner-createDesignMatrix-(mltk:predictor:Learner$SparseDataset+java:util:List)
mltk:predictor:evaluation:Metric-isFirstBetter-(D+D)
mltk:predictor:function:Function1D-getSegmentIndex-(mltk:core:Instance)
mltk:util:OptimUtils-isConverged-(java:util:List+Z)
mltk:predictor:function:Function2D-evaluate-(D+D)
mltk:predictor:evaluation:Metric-searchBestMetricValueIndex-(java:util:List)
mltk:core:io:InstancesReader-parseSparseInstance-([java:lang:String+java:util:TreeSet)
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner-update-(mltk:core:Instances+[mltk:predictor:tree:RegressionTree+[[[D+[[D+I)
mltk:core:processor:Discretizer-discretize-(mltk:core:Instances+I+I)
mltk:core:processor:Discretizer-computeBins-(java:util:List+I)

ID: 4
Methods: 
mltk:predictor:function:Function1D-read-(java:io:BufferedReader)
mltk:util:ArrayUtils-parseIntArray-(java:lang:String+java:lang:String)
mltk:predictor:function:Array2D-write-(java:io:PrintWriter)
mltk:predictor:glm:GLM-read-(java:io:BufferedReader)
mltk:predictor:function:Function2D-write-(java:io:PrintWriter)
mltk:predictor:tree:ensemble:rf:RandomForest-write-(java:io:PrintWriter)
mltk:predictor:tree:ensemble:brt:BRT-read-(java:io:BufferedReader)
mltk:core:BinnedAttribute-parse-(java:lang:String)
mltk:predictor:function:Array1D-write-(java:io:PrintWriter)
mltk:predictor:tree:ensemble:brt:BRT-write-(java:io:PrintWriter)
mltk:predictor:function:Function1D-write-(java:io:PrintWriter)
mltk:predictor:io:PredictorReader-read-(java:lang:String+java:lang:Class)
mltk:predictor:tree:RegressionTreeLeaf-write-(java:io:PrintWriter)
mltk:core:io:InstancesWriter-write-(mltk:core:Instances+java:lang:String+java:lang:String)
mltk:predictor:gam:tool:Visualizer-generateGnuplotScripts-(mltk:predictor:gam:GAM+mltk:core:Instances+java:lang:String+mltk:predictor:gam:tool:Visualizer$Terminal)
mltk:predictor:function:LinearFunction-write-(java:io:PrintWriter)
mltk:predictor:io:PredictorReader-read-(java:io:BufferedReader+java:lang:Class)
mltk:predictor:function:LinearFunction-read-(java:io:BufferedReader)
mltk:predictor:gam:GAM-write-(java:io:PrintWriter)
mltk:predictor:Ensemble-read-(java:io:BufferedReader)
mltk:predictor:tree:TreeInteriorNode-read-(java:io:BufferedReader)
mltk:core:NominalAttribute-toString-()
mltk:predictor:gam:tool:Visualizer$Terminal-getEnum-(java:lang:String)
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner$PerformanceMatrix-getBestParameters-()
mltk:core:BinnedAttribute-toString-()
mltk:predictor:Ensemble-write-(java:io:PrintWriter)
mltk:predictor:glm:GLM-write-(java:io:PrintWriter)
mltk:predictor:Learner$Task-get-(java:lang:String)
mltk:predictor:function:Function2D-read-(java:io:BufferedReader)
mltk:core:Instance-copy-()
mltk:core:NumericalAttribute-parse-(java:lang:String)
mltk:predictor:Family-get-(java:lang:String)
mltk:predictor:tree:ensemble:rf:RandomForest-read-(java:io:BufferedReader)
mltk:predictor:tree:RegressionTree-write-(java:io:PrintWriter)
mltk:predictor:function:Array2D-read-(java:io:BufferedReader)
mltk:predictor:tree:ensemble:ag:AdditiveGroves-write-(java:io:PrintWriter)
mltk:util:ArrayUtils-toString-([D+I+I)
mltk:predictor:function:CubicSpline-read-(java:io:BufferedReader)
mltk:predictor:tree:TreeInteriorNode-write-(java:io:PrintWriter)
mltk:predictor:tree:ensemble:ag:AdditiveGroves-read-(java:io:BufferedReader)
mltk:predictor:gam:tool:Visualizer-main-([java:lang:String)
mltk:predictor:LinkFunction-get-(java:lang:String)
mltk:predictor:io:PredictorReader-read-(java:io:BufferedReader)
mltk:predictor:function:Array1D-read-(java:io:BufferedReader)
mltk:core:Instance-toString-()
mltk:predictor:tree:RegressionTree-read-(java:io:BufferedReader)
mltk:predictor:gam:GAM-read-(java:io:BufferedReader)
mltk:core:NominalAttribute-parse-(java:lang:String)
mltk:predictor:tree:RegressionTreeLeaf-read-(java:io:BufferedReader)
mltk:cmdline:CmdLineParser-printUsage-()
mltk:predictor:gam:GAMLearner-setBaseLearner-(java:lang:String)
mltk:core:io:AttributesReader-read-(java:lang:String)
mltk:predictor:function:CubicSpline-write-(java:io:PrintWriter)

ID: 5
Methods: 
mltk:predictor:function:SquareCutter-getFunction2D-(I+I+[I+I+[D)
mltk:predictor:function:SquareCutter-findCuts-(mltk:predictor:function:SquareCutter$Table+I+[I)
mltk:util:Stack-pop-()
mltk:predictor:gam:interaction:FAST-getRSS-(mltk:predictor:gam:interaction:FAST$Table+I+I+D+[D)
mltk:util:tuple:LongPair-hashCode-()
mltk:predictor:gam:interaction:FAST-fillTable-(mltk:predictor:gam:interaction:FAST$Table+I+I+mltk:predictor:function:CHistogram+mltk:predictor:function:CHistogram)
mltk:predictor:function:SquareCutter-getRSS-(mltk:predictor:function:SquareCutter$Table+I+[I+[D)
mltk:predictor:gam:interaction:FAST$FASTThread-run-()
mltk:predictor:function:SquareCutter-computeTable-(mltk:predictor:function:Histogram2D+mltk:predictor:function:CHistogram+mltk:predictor:function:CHistogram+mltk:predictor:function:SquareCutter$Table)
mltk:predictor:function:SquareCutter-fillTable-(mltk:predictor:function:SquareCutter$Table+I+I+mltk:predictor:function:CHistogram+mltk:predictor:function:CHistogram)
mltk:util:tuple:IntDoublePair-hashCode-()
mltk:predictor:gam:interaction:FAST-computeWeights-(mltk:core:Instances+java:util:List)
mltk:util:tuple:LongDoublePair-hashCode-()
mltk:predictor:function:Function1D-getConstantFunction-(I+D)
mltk:predictor:tree:ensemble:RTreeList-removeLast-()
mltk:predictor:function:LineCutter-lineSearch-(mltk:core:Instances+mltk:predictor:function:Function1D)
mltk:predictor:function:SquareCutter-getRSS-(mltk:predictor:function:SquareCutter$Table+[I+I+[D)
mltk:predictor:function:SquareCutter-build-(mltk:core:Instances)
mltk:predictor:gam:interaction:FAST-computeTable-(mltk:predictor:function:Histogram2D+mltk:predictor:function:CHistogram+mltk:predictor:function:CHistogram+mltk:predictor:gam:interaction:FAST$Table)
mltk:predictor:evaluation:MAE-eval-([D+mltk:core:Instances)
mltk:predictor:gam:SPLAMLearner-computeGradient-([I+[[D+[D+[D)
mltk:util:tuple:DoublePair-hashCode-()
mltk:predictor:gam:interaction:FAST-computeCHistograms-(mltk:core:Instances+[Z+[mltk:predictor:function:CHistogram)
mltk:predictor:gam:interaction:FAST-computeWeight-(mltk:util:Element+[mltk:predictor:function:CHistogram+mltk:predictor:function:Histogram2D+D)

ID: 6
Methods: 
mltk:predictor:function:Array2D-regress-(mltk:core:Instance)
mltk:util:Random-getInstance-()
mltk:core:io:InstancesReader-parseDenseInstance-([java:lang:String+I)
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner-getAlpha-(I)
mltk:core:processor:InstancesSplitter-split-(mltk:core:Instances+java:lang:String+I)
mltk:core:processor:InstancesSplitter-split-(mltk:core:Instances+java:lang:String+[D)
mltk:util:tuple:Triple-equals-(java:lang:Object)
mltk:core:io:InstancesReader-read-(java:lang:String+java:lang:String+java:lang:String)
mltk:core:Instances-shuffle-()
mltk:predictor:tree:RegressionTree-getLeafNode-(mltk:core:Instance)
mltk:util:MathUtils-isInteger-(D)
mltk:util:tuple:Pair-equals-(java:lang:Object)
mltk:predictor:BoostedEnsemble-copy-()
mltk:core:processor:InstancesSplitter-getStrata-(mltk:core:Instances+java:lang:String)
mltk:predictor:glm:GroupLassoLearner$ModelStructure-equals-(java:lang:Object)
mltk:predictor:tree:ensemble:brt:LSBoostLearner-main-([java:lang:String)
mltk:predictor:glm:LassoLearner$ModelStructure-equals-(java:lang:Object)
mltk:util:tuple:Pair-hashCode-()
mltk:core:processor:InstancesSplitter-split-(mltk:core:Instances+java:lang:String+D)
mltk:predictor:function:Array1D-copy-()
mltk:util:tuple:IntTriple-equals-(java:lang:Object)
mltk:predictor:tree:ensemble:rf:RandomForest-copy-()
mltk:predictor:evaluation:Evaluator-main-([java:lang:String)
mltk:predictor:function:Array2D-copy-()
mltk:core:processor:InstancesSplitter-createCrossValidationFolds-(mltk:core:Instances+java:lang:String+I+D)
mltk:util:VectorUtils-dotProduct-(mltk:core:SparseVector+mltk:core:DenseVector)
mltk:core:io:InstancesReader-read-(java:lang:String+I+java:lang:String)
mltk:core:Attribute-equals-(java:lang:Object)
mltk:predictor:tree:RegressionTreeLearner-traverse-(mltk:predictor:tree:TreeNode+java:util:Map)
mltk:util:tuple:LongPair-equals-(java:lang:Object)
mltk:core:SparseVector-setValue-(I+D)
mltk:predictor:gam:tool:Diagnostics-main-([java:lang:String)
mltk:predictor:tree:ensemble:brt:LogitBoostLearner-main-([java:lang:String)
mltk:core:io:InstancesReader-assignTargetAttribute-(mltk:core:Instances)
mltk:core:io:InstancesReader-read-(java:lang:String+java:lang:String)
mltk:core:processor:InstancesSplitter-createCrossValidationFolds-(mltk:core:Instances+java:lang:String+I)
mltk:predictor:evaluation:Predictor-main-([java:lang:String)
mltk:core:BinnedAttribute-copy-()
mltk:util:VectorUtils-divide-([D+D)
mltk:core:processor:InstancesSplitter-main-([java:lang:String)
mltk:util:Stack-isEmpty-()
mltk:predictor:gam:GAM-copy-()
mltk:predictor:gam:SPLAMLearner$ModelStructure-equals-(java:lang:Object)
mltk:predictor:glm:GLM-copy-()
mltk:core:processor:InstancesSplitter-split-(mltk:core:Instances+[D)
mltk:predictor:function:Array1D-add-(mltk:predictor:function:Array1D)
mltk:util:tuple:IntPair-equals-(java:lang:Object)
mltk:cmdline:CmdLineParser-parse-([java:lang:String)
mltk:predictor:gam:interaction:FAST-getPredictor-(mltk:predictor:gam:interaction:FAST$Table+I+I+[D)
mltk:predictor:tree:ensemble:brt:LADBoostLearner-main-([java:lang:String)
mltk:predictor:BaggedEnsemble-copy-()

ID: 7
Methods: 
mltk:predictor:function:Array1D-evaluate-(D)
mltk:predictor:tree:ensemble:brt:BRT-predictProbabilities-(mltk:core:Instance)
mltk:predictor:glm:GLMOptimUtils-computeGroupLassoLoss-([D+[D+[[D+[D)
mltk:predictor:function:Function1D-isConstant-()
mltk:predictor:glm:LassoLearner-refitClassifier-([I+[Z+[[D+[D+I)
mltk:util:OptimUtils-computePseudoResidual-([D+[D+[D)
mltk:predictor:gam:GAM-regress-(mltk:core:Instance)
mltk:util:Stack-peek-()
mltk:predictor:gam:SPLAMLearner-doOnePass-([[I+[[[D+[D+[D+[D+Z+[Z+[[D+[D+[D+[D+[D+[D+[D+[D)
mltk:util:OptimUtils-fitIntercept-([D+[D+[D)
mltk:util:MathUtils-isZero-(D)
mltk:util:VectorUtils-dotProduct-([D+[D)
mltk:predictor:glm:GroupLassoLearner$ModelStructure-hashCode-()
mltk:predictor:glm:GLMOptimUtils-computeRidgeLoss-([D+[D+[D+D)
mltk:predictor:glm:LassoLearner-buildClassifier-(mltk:core:Instances+I+D)
mltk:predictor:BoostedEnsemble-classify-(mltk:core:Instance)
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner-evalRMSE-(java:util:List+[D)
mltk:util:OptimUtils-getProbability-(D)
mltk:predictor:function:Function2D-getSegmentIndex-(D+D)
mltk:predictor:glm:RidgeLearner-doOnePassBinomial-([[D+[D+[D+D+[D+[D+[D)
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner-getAlphaIdx-(D+I)
mltk:predictor:LinkFunction-applyInverse-(D)
mltk:predictor:glm:ElasticNetLearner-buildBinaryClassifier-([I+[[D+[D+I+D+D)
mltk:predictor:glm:ElasticNetLearner-buildClassifiers-(mltk:core:Instances+Z+I+I+D+D)
mltk:predictor:glm:ElasticNetLearner-buildClassifier-(mltk:core:Instances+Z+I+D+D)
mltk:predictor:glm:ElasticNetLearner-findMaxLambdaBinomial-([[D+[D+[D+[D+D)
mltk:util:ArrayUtils-isConstant-([D+I+I+D)
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner-regress-([mltk:predictor:tree:RegressionTree+mltk:core:Instance)
mltk:predictor:glm:GroupLassoLearner-buildClassifiers-(mltk:core:Instances+java:util:List+I+I+D)
mltk:predictor:BoostedEnsemble-removeLast-()
mltk:predictor:glm:GroupLassoLearner-findMaxLambdaBinomial-([[[I+[[[D+[D+[D+[D+[D)
mltk:predictor:glm:LassoLearner-doOnePassBinomial-([[D+[D+[D+D+[D+[D+[D)
mltk:predictor:glm:ElasticNetLearner-buildBinaryClassifiers-([I+[[I+[[D+[D+I+I+D+D)
mltk:predictor:glm:RidgeLearner-buildBinaryClassifiers-([I+[[I+[[D+[D+I+[D)
mltk:predictor:gam:GAM-predictProbabilities-(mltk:core:Instance)
mltk:util:MathUtils-sigmoid-(D)
mltk:predictor:glm:LassoLearner-buildBinaryClassifiers-([I+[[I+[[D+[D+I+I+D)
mltk:util:OptimUtils-getPseudoResidual-(D+D)
mltk:util:MathUtils-isFirstBetter-(D+D+Z)
mltk:predictor:function:Function1D-isZero-()
mltk:predictor:glm:LassoLearner-findMaxLambdaBinomial-([[D+[D+[D+[D)
mltk:util:VectorUtils-l1norm-(mltk:core:Vector)
mltk:predictor:tree:ensemble:rf:RandomForest-regress-(mltk:core:Instance)
mltk:predictor:function:LineCutter$Interval-compareTo-(mltk:predictor:function:LineCutter$Interval)
mltk:predictor:glm:LassoLearner-buildBinaryClassifier-([I+[[D+[D+I+D)
mltk:predictor:glm:GroupLassoLearner-computePenalty-([[D+[D)
mltk:predictor:glm:ElasticNetLearner-main-([java:lang:String)
mltk:util:OptimUtils-computeLogisticLoss-(D+D)
mltk:predictor:gam:SPLAMLearner-refitClassifier-([I+[B+[[[D+[D+[[D+[[D+I)
mltk:predictor:glm:ElasticNetLearner-doOnePassBinomial-([[I+[[D+[D+[D+D+D+[D+[D+[D)
mltk:predictor:BoostedEnsemble-regress-(mltk:core:Instance)
mltk:predictor:glm:LassoLearner-buildClassifiers-(mltk:core:Instances+I+I+D)
mltk:predictor:glm:GLM-predict-(mltk:core:Instance)
mltk:predictor:glm:RidgeLearner-buildBinaryClassifier-([I+[[D+[D+I+D)

ID: 8
Methods: 
mltk:predictor:glm:ElasticNetLearner-buildGaussianRegressors-([I+[[D+[D+I+I+D+D)
mltk:predictor:glm:RidgeLearner-buildClassifiers-(mltk:core:Instances+I+[D)
mltk:predictor:glm:LassoLearner-buildGaussianRegressor-(mltk:core:Instances+I+D)
mltk:util:VectorUtils-multiply-([D+D)
mltk:predictor:glm:LassoLearner-build-(mltk:core:Instances+mltk:predictor:Family)
mltk:predictor:gam:SPLAMLearner-buildClassifier-(mltk:core:Instances+Z+I+I+D+D)
mltk:util:VectorUtils-dotProduct-(mltk:core:DenseVector+mltk:core:SparseVector)
mltk:predictor:function:Function2D-subtract-(D)
mltk:predictor:glm:GroupLassoLearner-refitClassifier-(I+[[I+[Z+[[[I+[[[D+[D+[[D+I)
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner$PerformanceMatrix-expand-(I+I+I)
mltk:predictor:glm:ElasticNetLearner-buildGaussianRegressor-(mltk:core:Instances+I+D+D)
mltk:predictor:glm:ElasticNetLearner-buildGaussianRegressor-(mltk:core:Instances+Z+I+D+D)
mltk:predictor:function:Function1D-subtract-(D)
mltk:predictor:glm:ElasticNetLearner-build-(mltk:core:Instances+mltk:predictor:Family)
mltk:predictor:glm:LassoLearner-main-([java:lang:String)
mltk:predictor:glm:GroupLassoLearner-computeGradient-([[I+[[D+[D+[D)
mltk:predictor:glm:LassoLearner-buildGaussianRegressors-(mltk:core:Instances+Z+I+I+D)
mltk:predictor:glm:GroupLassoLearner-buildGaussianRegressor-(mltk:core:Instances+java:util:List+I+D)
mltk:predictor:tree:ensemble:BoostedRTrees-regress-(mltk:core:Instance)
mltk:predictor:glm:RidgeLearner-build-(mltk:core:Instances+mltk:predictor:Family)
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner$PredictionMatrix-expand-(I+I)
mltk:predictor:glm:LassoLearner-buildGaussianRegressor-(mltk:core:Instances+Z+I+D)
mltk:predictor:gam:ScorecardModelLearner-buildRegressor-(mltk:core:Instances+I+D)
mltk:predictor:glm:RidgeLearner-main-([java:lang:String)
mltk:predictor:gam:ScorecardModelLearner-buildClassifier-(mltk:core:Instances+I+D)
mltk:util:StatUtils-sumSq-([D)
mltk:predictor:glm:GroupLassoLearner-buildBinaryClassifier-([[I+[[[I+[[[D+[D+I+D)
mltk:core:processor:Discretizer-getMedian-(java:util:List+I+D)
mltk:predictor:tree:ensemble:brt:LogitBoostLearner-computeProbabilities-([[D+[[D)
mltk:util:MathUtils-indicator-(Z)
mltk:predictor:glm:RidgeLearner-buildGaussianRegressor-([I+[[I+[[D+[D+I+D)
mltk:util:StatUtils-indexOfMax-([D)
mltk:util:VectorUtils-l2norm-([D)
mltk:predictor:function:Function2D-multiply-(D)
mltk:predictor:glm:GroupLassoLearner-findMaxLambdaGaussian-([[[D+[D+[D)
mltk:predictor:tree:ensemble:brt:LSBoostLearner-build-(mltk:core:Instances)
mltk:predictor:function:Array1D-regress-(mltk:core:Instance)
mltk:predictor:glm:GroupLassoLearner-buildGaussianRegressor-([[I+[[[D+[D+I+D)
mltk:predictor:gam:interaction:FAST-computeHistogram2D-(mltk:core:Instances+I+I+mltk:predictor:function:Histogram2D)
mltk:predictor:BaggedEnsembleLearner-build-([mltk:core:Instances)
mltk:predictor:glm:GroupLassoLearner-buildClassifier-(mltk:core:Instances+Z+java:util:List+I+D)
mltk:predictor:glm:ElasticNetLearner-buildGaussianRegressor-([I+[[I+[[D+[D+I+D+D)
mltk:predictor:tree:TreeInteriorNode-goLeft-(mltk:core:Instance)
mltk:predictor:glm:GroupLassoLearner-buildGaussianRegressors-(mltk:core:Instances+java:util:List+I+I+D)
mltk:predictor:gam:ScorecardModelLearner-main-([java:lang:String)
mltk:predictor:glm:GroupLassoLearner-doOnePassGaussian-([[[D+[D+Z+[Z+[[D+[D+[D+[D+[D)
mltk:util:StatUtils-min-([D)
mltk:predictor:gam:ScorecardModelLearner-build-(mltk:core:Instances)
mltk:predictor:glm:RidgeLearner-buildGaussianRegressor-(mltk:core:Instances+Z+I+D)
mltk:predictor:glm:GroupLassoLearner-build-(mltk:core:Instances+mltk:predictor:Family)

ID: 9
Methods: 
mltk:predictor:glm:GLMOptimUtils-computeElasticNetLoss-([D+[D+D+D)
mltk:predictor:glm:LassoLearner$ModelStructure-hashCode-()
mltk:util:tuple:Triple-hashCode-()
mltk:predictor:evaluation:AUC-eval-([D+[D)
mltk:util:tuple:IntPair-hashCode-()
mltk:predictor:glm:RidgeLearner-doOnePassGaussian-([[D+[D+D+[D+[D)
mltk:predictor:evaluation:Evaluator-evalAreaUnderROC-(mltk:predictor:ProbabilisticClassifier+mltk:core:Instances)
mltk:predictor:function:Array2D-evaluate-(D+D)
mltk:predictor:function:LineCutter-split-(java:util:List+java:util:List+mltk:predictor:function:LineCutter$Interval+D)
mltk:util:StatUtils-std-([D+I)
mltk:predictor:function:SquareCutter-findCut-(mltk:predictor:function:CHistogram+mltk:util:tuple:IntDoublePair)
mltk:predictor:glm:GLM-regress-(mltk:core:Instance)
mltk:util:StatUtils-variance-([D+I)
mltk:predictor:tree:RTreeLearner-getStats-(mltk:core:Instances+[D)
mltk:predictor:evaluation:AUC-eval-([D+mltk:core:Instances)
mltk:predictor:Learner-getDenseDataset-(mltk:core:Instances+Z)
mltk:predictor:gam:SPLAMLearner-getPenalty-([[D+[D+[D)
mltk:predictor:glm:GLMOptimUtils-computeLassoLoss-([D+[D+D)
mltk:predictor:evaluation:RMSE-eval-([D+[D)
mltk:predictor:evaluation:Evaluator-evalRMSE-(mltk:predictor:Regressor+mltk:core:Instances)
mltk:util:VectorUtils-correlation-([D+[D)
mltk:util:MathUtils-equals-(D+D)
mltk:util:OptimUtils-computeQuadraticLoss-([D)
mltk:core:Attribute-hashCode-()
mltk:predictor:gam:DenseDesignMatrix-createCubicSplineDesignMatrix-([[D+[D+I)
mltk:predictor:function:CubicSpline-regress-(mltk:core:Instance)
mltk:predictor:glm:ElasticNetLearner-doOnePassGaussian-([[D+[D+D+D+[D+[D)
mltk:util:tuple:IntTriple-hashCode-()
mltk:predictor:evaluation:Evaluator-evalError-(mltk:predictor:Classifier+mltk:core:Instances)
mltk:predictor:function:SquareCutter-lineSearch-(mltk:core:Instances+I+I+I+I+I+[D)
mltk:predictor:tree:ensemble:BaggedRTrees-regress-(mltk:core:Instance)
mltk:util:StatUtils-rms-([D)
mltk:util:VectorUtils-add-([D+D)
mltk:predictor:function:Function1D-multiply-(D)
mltk:predictor:gam:SPLAMLearner-getRegularizationParameters-(D+D+[D+[D+I)
mltk:predictor:function:CubicSpline-evaluate-(D)
