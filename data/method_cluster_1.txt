ID: 0
Methods: 
mltk:predictor:tree:RTreeLearner-getHistogram-(mltk:core:Instances+java:util:List+java:util:List+D+D+java:util:List)
mltk:predictor:tree:RegressionTreeLearner-buildMinLeafSizeLimitedTree-(mltk:core:Instances+I)
mltk:predictor:tree:ensemble:rf:RandomForestLearner-build-(mltk:core:Instances)
mltk:predictor:tree:TreeLearner$Dataset-split-(I+D+mltk:predictor:tree:TreeLearner$Dataset+mltk:predictor:tree:TreeLearner$Dataset)
mltk:predictor:function:LineCutter-build-(mltk:core:Instances+mltk:core:Attribute+D)
mltk:predictor:tree:RegressionTreeLearner-buildAlphaLimitedTree-(mltk:core:Instances+D)
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner-runLayeredTraining-(mltk:core:Instances+mltk:core:Instances+I+I+I+I+I+I+java:util:List+mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner$PerformanceMatrix+mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner$ModelMatrix+mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner$PredictionMatrix+[D+[D)
mltk:predictor:function:Function2D-regress-(mltk:core:Instance)
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner-buildRegressor-(mltk:core:Instances+mltk:core:Instances)
mltk:util:tuple:IntDoublePair-equals-(java:lang:Object)
mltk:util:tuple:IntDoublePairComparator-compare-(mltk:util:tuple:IntDoublePair+mltk:util:tuple:IntDoublePair)
mltk:predictor:function:LineCutter-build-(mltk:core:Instances)
mltk:predictor:function:LineCutter-build-(mltk:core:Instances+I+D)
mltk:predictor:tree:RegressionTreeLearner-build-(mltk:core:Instances)
mltk:predictor:Learner$Task-getDefaultMetric-()
mltk:predictor:tree:TreeLearner$Dataset-create-(mltk:core:Instances)
mltk:feature:selection:BackwardElimination-select-(mltk:core:Instances+mltk:core:Instances+mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner+I+I+D+I)
mltk:predictor:function:LineCutter-build-(mltk:core:Instances+mltk:core:Attribute+I)
mltk:core:processor:Discretizer-getStats-(java:util:List+java:util:List)
mltk:core:SparseVector-copy-()
mltk:predictor:function:LineCutter-build-(mltk:predictor:function:Function1D+java:util:List+java:util:List+I)
mltk:util:ArrayUtils-parseDoubleArray-(java:lang:String+java:lang:String)
mltk:predictor:tree:RegressionTreeLearner-createNode-(mltk:predictor:tree:TreeLearner$Dataset+I+[D)
mltk:util:tuple:DoublePair-equals-(java:lang:Object)
mltk:predictor:Learner-isSparse-(mltk:core:Instances)
mltk:predictor:evaluation:MetricFactory-getMetric-(java:lang:String)
mltk:predictor:function:LineCutter-inorder-(mltk:predictor:function:LineCutter$Interval+java:util:List+java:util:List)
mltk:predictor:tree:ensemble:rf:RandomRegressionTreeLearner-createNode-(mltk:predictor:tree:TreeLearner$Dataset+I+[D)
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner-build-(mltk:core:Instances)
mltk:predictor:tree:RegressionTreeLearner-buildDepthLimitedTree-(mltk:core:Instances+I)
mltk:core:Sampling-createBootstrapSample-(mltk:core:Instances+java:util:Map+java:util:List)
mltk:predictor:function:LineCutter-build-(mltk:predictor:function:Function1D+java:util:List+java:util:List+D)
mltk:predictor:tree:RegressionTreeLearner-buildNumLeafLimitedTree-(mltk:core:Instances+I)
mltk:predictor:glm:LassoLearner-doOnePassGaussian-([[I+[[D+[D+D+[D+[D)
mltk:util:MathUtils-sign-(D)
mltk:predictor:function:LineCutter$Interval-isInteriorNode-()
mltk:predictor:function:LineCutter-sumUp-(java:util:List+I+I)
mltk:core:Instances-copy-()
mltk:core:Sampling-createBags-(mltk:core:Instances+I)
mltk:util:VectorUtils-subtract-([D+D)
mltk:core:processor:Discretizer-main-([java:lang:String)
mltk:feature:selection:BackwardElimination-evaluateModel-(mltk:core:Instances+mltk:core:Instances+mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner+I+I+D+I)
mltk:util:tuple:LongDoublePairComparator-compare-(mltk:util:tuple:LongDoublePair+mltk:util:tuple:LongDoublePair)
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner-main-([java:lang:String)
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner-backfit-(mltk:core:Instances+D+[mltk:predictor:tree:RegressionTree+[[D+[D)
mltk:predictor:tree:RegressionTreeLearner-main-([java:lang:String)
mltk:predictor:tree:ensemble:ag:AdditiveGrovesLearner$ModelMatrix-add-(I+I+[mltk:predictor:tree:RegressionTree)
mltk:util:tuple:LongDoublePair-equals-(java:lang:Object)
mltk:core:processor:Discretizer-computeBins-([D+I)
mltk:predictor:tree:ensemble:RTreeList-copy-()
mltk:predictor:tree:ensemble:rf:RandomForestLearner-main-([java:lang:String)